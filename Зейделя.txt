#include <stdio.h>
#include <math.h>

#define N 4               
#define EPSILON 1e-6     
#define MAX_ITER 100      

void seidelMethod(double matrix[N][N+1], double x[N]) {
    int iter, i, j;
    double x_old[N];

    for (iter = 0; iter < MAX_ITER; iter++) {
        // Сохраняем предыдущее приближение
        for (i = 0; i < N; i++) {
            x_old[i] = x[i];
        }

        // Одна итерация Зейделя
        for (i = 0; i < N; i++) {
            if (fabs(matrix[i][i]) < EPSILON) {
                printf("Ошибка: нулевой (или близкий к нулю) элемент на диагонали в строке %d.\n", i + 1);
                return;
            }

            double sum = matrix[i][N];
            for (j = 0; j < N; j++) {
                if (j != i) {
                    sum -= matrix[i][j] * x[j];
                }
            }
            x[i] = sum / matrix[i][i];
        }

        // Проверка на сходимость
        double max_diff = 0.0;
        for (i = 0; i < N; i++) {
            double diff = fabs(x[i] - x_old[i]);
            if (diff > max_diff) {
                max_diff = diff;
            }
        }

        if (max_diff < EPSILON) {
            printf("Метод Зейделя сошелся за %d итераций.\n", iter + 1);
            return;
        }
    }

    printf("Предупреждение: метод не сошелся за %d итераций.\n", MAX_ITER);
}

int main() {
    double matrix[N][N+1];
    double x[N] = {0};

    printf("Введите коэффициенты системы (матрица %dx%d + свободный член):\n", N, N);
    for (int i = 0; i < N; i++) {
        printf("Уравнение %d: ", i + 1);
        for (int j = 0; j <= N; j++) {
            scanf("%lf", &matrix[i][j]);
        }
    }

    seidelMethod(matrix, x);

    printf("Решение:\n");
    for (int i = 0; i < N; i++) {
        printf("x%d = %.6lf\n", i + 1, x[i]);
    }

    return 0;
}
